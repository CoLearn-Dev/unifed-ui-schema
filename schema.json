{
  "type": "object",
  "properties": {
    "framework": {
      "type": "string",
      "widget": "Select",
      "enum": [
        "flower",
        "fedtree",
        "crypten",
        "fedml",
        "fate",
        "tff",
        "paddlefl",
        "fedscale",
        "federatedscope",
        "fedlearner",
        "flute"
      ]
    },
    "algorithm": {},
    "dataset": {},
    "model": {},
    "training": {},
    "deployment": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "widget": "Select",
          "enum": [
            "local",
            "colink-default",
            "colink"
          ]
        }
      },
      "required": [
        "mode"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "mode": {
                "const": "colink"
              }
            },
            "required": [
              "mode"
            ]
          },
          "then": {
            "properties": {
              "participants": {
                "type": "array",
                "widget": "GenericList",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "string",
                      "minLength": 66,
                      "maxLength": 66,
                      "default": ""
                    },
                    "role": {
                      "type": "string",
                      "minLength": 1,
                      "default": ""
                    }
                  }
                }
              }
            },
            "required": [
              "participants"
            ]
          }
        }
      ]
    }
  },
  "required": [
    "framework",
    "algorithm",
    "dataset",
    "model",
    "deployment",
    "training"
  ],
  "allOf": [
    {
      "if": {
        "properties": {
          "framework": {
            "pattern": "flower|federatedscope|tff|paddlefl|fedscale"
          }
        },
        "required": [
          "framework"
        ]
      },
      "then": {
        "properties": {
          "algorithm": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "fedavg"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "framework": {
            "const": "fedtree"
          }
        },
        "required": [
          "framework"
        ]
      },
      "then": {
        "properties": {
          "algorithm": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "secureboost",
              "histsecagg"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "framework": {
            "const": "fate"
          }
        },
        "required": [
          "framework"
        ]
      },
      "then": {
        "properties": {
          "algorithm": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "fedavg",
              "homonn",
              "heteronn",
              "secureboost",
              "histsecagg",
              "heterolr",
              "homolr"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "algorithm": {
            "pattern": "fedavg|homonn|heteronn"
          }
        },
        "required": [
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "model": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "logistic_regression",
              "mlp_128",
              "mlp_128_128"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "algorithm": {
            "pattern": "secureboost|histsecagg"
          }
        },
        "required": [
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "model": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "gbdt_64_64_6"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "algorithm": {
            "pattern": "fedavg|homonn|histsecagg"
          }
        },
        "required": [
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "dataset": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "breast_horizontal",
              "default_credit_horizontal",
              "give_credit_horizontal",
              "student_horizontal",
              "vehicle_scale_horizontal",
              "celeba",
              "femnist",
              "reddit"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "algorithm": {
            "pattern": "heteronn|secureboost"
          }
        },
        "required": [
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "dataset": {
            "type": "string",
            "widget": "Select",
            "enum": [
              "breast_vertical",
              "default_credit_vertical",
              "dvisits_vertical",
              "give_credit_vertical",
              "motor_vertical",
              "student_vertical",
              "vehicle_scale_vertical"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "framework": {
            "pattern": "tff|paddlefl"
          },
          "algorithm": {
            "pattern": "fedavg|homonn|heteronn"
          }
        },
        "required": [
          "framework",
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "training": {
            "type": "object",
            "properties": {
              "global_epochs": {},
              "local_epochs": {
                "type": "number",
                "default": 1
              }
            },
            "required": [
              "global_epochs",
              "local_epochs",
              "batch_size",
              "learning_rate",
              "client_per_round",
              "loss_func",
              "optimizer"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "framework": {
            "pattern": "fedlearner"
          },
          "algorithm": {
            "pattern": "fedavg|homonn|heteronn"
          }
        },
        "required": [
          "framework",
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "training": {
            "type": "object",
            "properties": {
              "global_epochs": {},
              "steps_per_sync": {
                "type": "number",
                "default": 1
              }
            },
            "required": [
              "global_epochs",
              "steps_per_sync",
              "batch_size",
              "learning_rate",
              "client_per_round",
              "loss_func",
              "optimizer"
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "algorithm": {
            "pattern": "fedavg|homonn|heteronn"
          }
        },
        "required": [
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "training": {
            "type": "object",
            "properties": {
              "global_epochs": {
                "type": "number",
                "default": 30
              },
              "batch_size": {
                "type": "number",
                "default": 32
              },
              "learning_rate": {
                "type": "number",
                "default": 0.01
              },
              "client_per_round": {
                "type": "number",
                "default": 2
              },
              "loss_func": {
                "type": "string",
                "widget": "Select",
                "enum": [
                  "cross_entropy"
                ]
              },
              "optimizer": {
                "type": "string",
                "widget": "Select",
                "enum": [
                  "sgd",
                  "adam"
                ]
              }
            },
            "required": [
              "global_epochs",
              "batch_size",
              "learning_rate",
              "client_per_round",
              "loss_func",
              "optimizer"
            ],
            "allOf": [
              {
                "if": {
                  "properties": {
                    "optimizer": {
                      "const": "sgd"
                    }
                  },
                  "required": [
                    "optimizer"
                  ]
                },
                "then": {
                  "properties": {
                    "optimizer_param": {
                      "type": "object",
                      "properties": {
                        "momentum": {
                          "type": "number",
                          "default": 0.9
                        },
                        "dampening": {
                          "type": "number",
                          "default": 0
                        },
                        "weight_decay": {
                          "type": "number",
                          "default": 0
                        },
                        "nesterov": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  }
                }
              },
              {
                "if": {
                  "properties": {
                    "optimizer": {
                      "const": "adam"
                    }
                  },
                  "required": [
                    "optimizer"
                  ]
                },
                "then": {
                  "properties": {
                    "optimizer_param": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "algorithm": {
            "pattern": "secureboost|histsecagg"
          }
        },
        "required": [
          "algorithm"
        ]
      },
      "then": {
        "properties": {
          "training": {
            "type": "object",
            "properties": {
              "learning_rate": {
                "type": "number",
                "default": 0.1
              },
              "tree_param": {
                "type": "object",
                "properties": {
                  "max_depth": {
                    "type": "number",
                    "default": 6
                  },
                  "n_trees": {
                    "type": "number",
                    "default": 64
                  },
                  "max_num_bin": {
                    "type": "number",
                    "default": 64
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}